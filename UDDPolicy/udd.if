## <summary>User Data Defence Templates</summary>


########################################
## <summary>
##  Application domain. Template creates applicaton_t and application_exec_t types.
## </summary>
## <param name="prefix">
##  <summary>
##  Application name.
##  </summary>
## </param>
#
interface(`udd_application_create',`
  type $1_t;
  type $1_exec_t;
  application_domain($1_t, $1_exec_t);
  ubac_constrained($1_t)
')


########################################
## <summary>
##  Allow user to use application domain.
## </summary>
## <param name="role">
##  <summary>
##  User role.
##  </summary>
## </param>
## <param name="domain">
##  <summary>
##  User domain.
##  </summary>
## </param>
## <param name="application_prefix">
##  <summary>
##  Application name.
##  </summary>
## </param>
#
interface(`udd_application_user_role',`
  role $1 types $3_t;
  domtrans_pattern($2, $3_exec_t, $3_t)
  #domain_auto_trans($2, $3_exec_t, $3_t)
')

########################################
## <summary>
##  Create appication_tmpfs_t type.
## </summary>
## <param name="prefix">
##  <summary>
##  Application name.
##  </summary>
## </param>
#
interface(`udd_application_tmpfs_create',`
  type $1_tmpfs_t;
  files_tmpfs_file($1_tmpfs_t)
')


########################################
## <summary>
##  Allow application base access to xserver.
## </summary>
## <param name="prefix">
##  <summary>
##  Application name.
##  </summary>
## </param>
## <param name="tmpfs_files">
##  <summary>
##  Application tmpfs type.
##  </summary>
## </param>
#
interface(`udd_application_xserver_access',`
  xserver_user_x_domain_template($1, $1_t, $2);
')

########################################
## <summary>
##  Allow application access to DBus server and communication with user domain.
## </summary>
## <param name="prefix">
##  <summary>
##  Application name.
##  </summary>
## </param>
## <param name="domain">
##  <summary>
##  User domain.
##  </summary>
## </param>
#
interface(`udd_application_dbus_access',`
  require{
    class dbus send_msg;
  }
  allow $2 $1_t:dbus send_msg;
  allow $1_t $2:dbus send_msg;
  dbus_system_bus_client($1_t);
  dbus_session_bus_client($1_t);
  dbus_read_lib_files($1_t);
  dbus_unconfined($1_t)
')

########################################
## <summary>
##  Creates file type; 
## </summary>
## <param name="prefix">
##  <summary>
##  Type prefix.
##  </summary>
## </param>
#
interface(`udd_application_files_type_create',`
  type $1;
  files_type($1);
')


########################################
## <summary>
##  Creates prefix_dir_t and prefix_file_t types with transition 
## </summary>
## <param name="application_prefix">
##  <summary>
##  Application name prefix.
##  </summary>
## <param name="prefix">
##  <summary>
##  Files and directory type prefix.
##  </summary>
## </param>
#
interface(`udd_application_files_dir_create',`
  udd_application_files_type_create($2_dir_t)  
  udd_application_files_type_create($2_file_t)  
  type_transition $1_t $2_dir_t:file $2_file_t;
')

########################################
## <summary>
##  Create GUI application with config directory. 
## </summary>
## <param name="prefix">
##  <summary>
##  Application prefix.
##  </summary>
## </param>
#
interface(`udd_gui_application_create',`
  udd_application_create($1)
  udd_application_tmpfs_create($1)
  udd_application_xserver_access($1, $1_tmpfs_t)
  udd_application_files_dir_create($1, $1_config)
')

########################################
## <summary>
##  Allow access to GUI application. 
## </summary>
## <param name="prefix">
##  <summary>
##  Application prefix.
##  </summary>
## </param>
## <param name="role">
##  <summary>
##  User role.
##  </summary>
## </param>
## <param name="domain">
##  <summary>
##  User domain.
##  </summary>
## </param>
#
interface(`udd_gui_application_access',`
  udd_application_user_role($2, $3, $1);
  udd_application_dbus_access($1, $3)
')

########################################
## <summary>
##  Append special domain to GUI application. 
## </summary>
## <param name="prefix">
##  <summary>
##  Application prefix.
##  </summary>
## </param>
## <param name="special_part">
##  <summary>
##  Special suffix.
##  </summary>
## </param>
#
interface(`udd_gui_application_append_special_domain',`
  udd_application_create($1_$2)
  udd_application_tmpfs_create($1_$2)
  udd_application_xserver_access($1_$2, $1_$2_tmpfs_t)
  type_transition $1_$2_t $1_config_dir_t:file $1_config_file_t;
  udd_application_files_dir_create($1_$2, $1_$2);
')

########################################
## <summary>
##  Allow access to special domain of GUI application. 
## </summary>
## <param name="prefix">
##  <summary>
##  Application prefix.
##  </summary>
## </param>
## <param name="special_part">
##  <summary>
##  Special suffix.
##  </summary>
## </param>
## <param name="role">
##  <summary>
##  User role.
##  </summary>
## </param>
## <param name="domain">
##  <summary>
##  User domain.
##  </summary>
## </param>
#
interface(`udd_gui_application_special_domain_access',`
  udd_gui_application_access($1_$2, $3, $4)  
')
